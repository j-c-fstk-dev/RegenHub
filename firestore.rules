
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isOrgOwner(orgId) {
        return get(/databases/$(database)/documents/organizations/$(orgId)).data.createdBy == request.auth.uid;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS
    // Users can be created by anyone signing up.
    // Users can only read and update their own profile. Admins can also update.
    match /users/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
      allow update: if (isSignedIn() && isOwner(userId)) || isAdmin();
      allow delete: if (isSignedIn() && isOwner(userId)) || isAdmin();
    }

    // ORGANIZATIONS
    // Organizations can be created by any signed-in user.
    // They are publicly readable for profile pages.
    // Only the creator can update or delete their organization.
    match /organizations/{orgId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isSignedIn() && isOrgOwner(orgId);
    }
    
    // PROJECTS
    // Projects can only be created by the owner of the parent organization.
    // They can only be read, updated, or deleted by the organization owner.
    match /projects/{projectId} {
        allow get, list: if isSignedIn() && isOrgOwner(request.resource.data.orgId);
        allow create: if isSignedIn() && isOrgOwner(request.resource.data.orgId) && request.resource.data.createdBy == request.auth.uid;
        allow update, delete: if isSignedIn() && isOrgOwner(resource.data.orgId);
    }
    
    // ACTIONS
    // Actions can be created by any signed-in user, as long as they provide the orgId.
    // They are publicly readable *if verified* for the impact wall.
    // Admin can update them (for verification). Owner can update before verification.
    match /actions/{actionId} {
        allow get, list: if resource.data.status == 'verified' || (isSignedIn() && isOwner(resource.data.createdBy)) || isAdmin();
        allow create: if isSignedIn() && request.resource.data.createdBy == request.auth.uid;
        allow update: if isAdmin() || (isSignedIn() && isOwner(resource.data.createdBy));
        allow delete: if isSignedIn() && isOwner(resource.data.createdBy);
    }

    // LEAP ASSESSMENTS
    // Only the organization owner or an admin can manage assessments.
    match /leapAssessments/{assessmentId} {
       allow get, list, update, delete: if isSignedIn() && (isOrgOwner(resource.data.orgId) || isAdmin());
       allow create: if isSignedIn() && isOrgOwner(request.resource.data.orgId);
    }

  }
}
