/**
 * @fileOverview Firestore Security Rules for Regenerative Intent App
 *
 * Core Philosophy:
 * This ruleset enforces a user-ownership model for user profiles and restricts regenerative intent management to authenticated users. Data shape validation is relaxed for rapid prototyping.
 *
 * Data Structure:
 * - User profiles are stored under `/users/{userId}`.
 * - Regenerative intents are stored under `/regenerative_intents/{intentId}`.
 *
 * Key Security Decisions:
 * - Listing of user profiles is disallowed.
 * - All write operations are protected by authorization checks.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Rules for user profiles. Only the owner can read/write their profile.
     * @path /users/{userId}
     * @allow (create) - Authenticated user creates their own profile with matching userId.
     * @allow (get, update, delete) - Authenticated user with matching userId accesses their profile.
     * @deny (create) - Unauthenticated user attempts to create a profile.
     * @deny (get, update, delete) - Authenticated user attempts to access another user's profile.
     * @deny (list) - Listing user profiles is not allowed.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId} {
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.displayName is string;
      allow get: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId) && request.resource.data.displayName == resource.data.displayName;
      allow delete: if isSignedIn() && isExistingOwner(userId);
      allow list: if false;
    }

    /**
     * @description Rules for regenerative intents.
     * @path /regenerative_intents/{intentId}
     * @allow (get, list) - Any authenticated user can read regenerative intents.
     * @allow (create, update, delete) - Only authenticated users can create, update, and delete intents.
     * @deny (create, update, delete) - Unauthenticated users cannot modify regenerative intents.
     * @principle Allows public read access with authenticated-user-only writes.
     */
    match /regenerative_intents/{intentId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isSignedIn() && isOwner(userId) && resource != null;
    }
  }
}